import React from 'react';
import styled from 'styled-components';

import generateThemeItem from '../../HelperFunctions/generateThemeItem';
import { IGenerateThemeItemProps, IGenerateThemeItem } from '../../HelperFunctions/generateThemeItem';
import SVGAtom from '../../Atoms/SVGAtom/SVGAtom';

export interface IFancyA {
  size: "small" | "medium" | "large";
  wide?: boolean; 
  design: "primary" | "secondary" | "accent" | "transparent";
  align?: "left" | "right" | "center";
  color?: "primary" | "secondary" | "accent";
  hoverColor?: "primary" | "secondary" | "accent";
  label?: string;
  outlined?: boolean;
  icon?: JSX.Element;
  disabled?: boolean;
  onClick?: () => void;
}

// the style is generated by the generateThemeItem function
const A = styled.a<IGenerateThemeItem>`
  ${(props: IGenerateThemeItem) => generateThemeItem(props)}
`;

// --------------------------------------------------------------------------- //
// --------------- The Main Component for the Fancy A Tag -------------------- //
// --------------------------------------------------------------------------- //
export default function FancyA(props: IFancyA) {
  const { icon, label, outlined, size, design, align, color, wide, hoverColor, disabled, onClick  } = props;

  return (
    <A
      $size={size}
      $design={design}
      $align={align}
      $color={color}
      $wide={wide}
      $icon={icon}
      $hoverColor={hoverColor}
      $label={label}
      $outlined={outlined}
      onClick={onClick}
    >
      {icon && <SVGAtom size={props.size}>{icon}</SVGAtom>}
      {label && <span>{label}</span>}
    </A>
  );
}

FancyA.defaultProps = {
  size: 'medium',
  design: 'transparent',
  align: 'left',
  hoverColor: 'accent',
  outlined: false,
  disabled: false,
  onClick: () => {},
};
